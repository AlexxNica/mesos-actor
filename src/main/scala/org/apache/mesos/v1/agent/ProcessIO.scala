// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package org.apache.mesos.v1.agent

import org.apache.mesos.v1.agent

/** *
  * Streaming response to `Call::LAUNCH_NESTED_CONTAINER_SESSION` and
  * `Call::ATTACH_CONTAINER_OUTPUT`.
  *
  * This message is also used to stream request data for
  * `Call::ATTACH_CONTAINER_INPUT`.
  */
@SerialVersionUID(0L)
final case class ProcessIO(
                            `type`: scala.Option[ProcessIO.Type] = None,
                            data: scala.Option[ProcessIO.Data] = None,
                            control: scala.Option[ProcessIO.Control] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ProcessIO] with com.trueaccord.lenses.Updatable[ProcessIO] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (`type`.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, `type`.get.value) }
      if (data.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(data.get.serializedSize) + data.get.serializedSize }
      if (control.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(control.get.serializedSize) + control.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      `type`.foreach { __v =>
        _output__.writeEnum(1, __v.value)
      };
      data.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      control.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ProcessIO = {
      var __type = this.`type`
      var __data = this.data
      var __control = this.control
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __type = Some(agent.ProcessIO.Type.fromValue(_input__.readEnum()))
          case 18 =>
            __data = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __data.getOrElse(agent.ProcessIO.Data.defaultInstance)))
          case 26 =>
            __control = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __control.getOrElse(agent.ProcessIO.Control.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      agent.ProcessIO(
          `type` = __type,
          data = __data,
          control = __control
      )
    }
    def getType: ProcessIO.Type = `type`.getOrElse(agent.ProcessIO.Type.UNKNOWN)
    def clearType: ProcessIO = copy(`type` = None)
    def withType(__v: ProcessIO.Type): ProcessIO = copy(`type` = Some(__v))
    def getData: ProcessIO.Data = data.getOrElse(agent.ProcessIO.Data.defaultInstance)
    def clearData: ProcessIO = copy(data = None)
    def withData(__v: ProcessIO.Data): ProcessIO = copy(data = Some(__v))
    def getControl: ProcessIO.Control = control.getOrElse(agent.ProcessIO.Control.defaultInstance)
    def clearControl: ProcessIO = copy(control = None)
    def withControl(__v: ProcessIO.Control): ProcessIO = copy(control = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => `type`.map(_.javaValueDescriptor).orNull
        case 2 => data.orNull
        case 3 => control.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => `type`.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => data.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => control.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = agent.ProcessIO
}

object ProcessIO extends com.trueaccord.scalapb.GeneratedMessageCompanion[ProcessIO] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[ProcessIO] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): ProcessIO = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    agent.ProcessIO(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => agent.ProcessIO.Type.fromValue(__e.getNumber)),
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[ProcessIO.Data]],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[ProcessIO.Control]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ProcessIO] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      agent.ProcessIO(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => agent.ProcessIO.Type.fromValue(__e.number)),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[ProcessIO.Data]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[ProcessIO.Control]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AgentProto.javaDescriptor.getMessageTypes.get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AgentProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => __out = agent.ProcessIO.Data
      case 3 => __out = agent.ProcessIO.Control
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => agent.ProcessIO.Type
    }
  }
  lazy val defaultInstance = agent.ProcessIO(
  )
  sealed trait Type extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = Type
    def isUnknown: Boolean = false
    def isData: Boolean = false
    def isControl: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] = agent.ProcessIO.Type
  }
  
  object Type extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] = this
    @SerialVersionUID(0L)
    case object UNKNOWN extends Type {
      val value = 0
      val index = 0
      val name = "UNKNOWN"
      override def isUnknown: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object DATA extends Type {
      val value = 1
      val index = 1
      val name = "DATA"
      override def isData: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CONTROL extends Type {
      val value = 2
      val index = 2
      val name = "CONTROL"
      override def isControl: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends Type with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(UNKNOWN, DATA, CONTROL)
    def fromValue(value: Int): Type = value match {
      case 0 => UNKNOWN
      case 1 => DATA
      case 2 => CONTROL
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = agent.ProcessIO.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = agent.ProcessIO.scalaDescriptor.enums(0)
  }
  @SerialVersionUID(0L)
  final case class Data(
                         `type`: scala.Option[ProcessIO.Data.Type] = None,
                         data: scala.Option[_root_.com.google.protobuf.ByteString] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Data] with com.trueaccord.lenses.Updatable[Data] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (`type`.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, `type`.get.value) }
        if (data.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, data.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        `type`.foreach { __v =>
          _output__.writeEnum(1, __v.value)
        };
        data.foreach { __v =>
          _output__.writeBytes(2, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ProcessIO.Data = {
        var __type = this.`type`
        var __data = this.data
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __type = Some(agent.ProcessIO.Data.Type.fromValue(_input__.readEnum()))
            case 18 =>
              __data = Some(_input__.readBytes())
            case tag => _input__.skipField(tag)
          }
        }
        agent.ProcessIO.Data(
            `type` = __type,
            data = __data
        )
      }
      def getType: ProcessIO.Data.Type = `type`.getOrElse(agent.ProcessIO.Data.Type.UNKNOWN)
      def clearType: Data = copy(`type` = None)
      def withType(__v: ProcessIO.Data.Type): Data = copy(`type` = Some(__v))
      def getData: _root_.com.google.protobuf.ByteString = data.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def clearData: Data = copy(data = None)
      def withData(__v: _root_.com.google.protobuf.ByteString): Data = copy(data = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => `type`.map(_.javaValueDescriptor).orNull
          case 2 => data.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => `type`.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => data.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = agent.ProcessIO.Data
  }
  
  object Data extends com.trueaccord.scalapb.GeneratedMessageCompanion[ProcessIO.Data] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[ProcessIO.Data] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): ProcessIO.Data = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      agent.ProcessIO.Data(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => agent.ProcessIO.Data.Type.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[ProcessIO.Data] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        agent.ProcessIO.Data(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => agent.ProcessIO.Data.Type.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = agent.ProcessIO.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = agent.ProcessIO.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => agent.ProcessIO.Data.Type
      }
    }
    lazy val defaultInstance = agent.ProcessIO.Data(
    )
    sealed trait Type extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = Type
      def isUnknown: Boolean = false
      def isStdin: Boolean = false
      def isStdout: Boolean = false
      def isStderr: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] = agent.ProcessIO.Data.Type
    }
    
    object Type extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] = this
      @SerialVersionUID(0L)
      case object UNKNOWN extends Type {
        val value = 0
        val index = 0
        val name = "UNKNOWN"
        override def isUnknown: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object STDIN extends Type {
        val value = 1
        val index = 1
        val name = "STDIN"
        override def isStdin: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object STDOUT extends Type {
        val value = 2
        val index = 2
        val name = "STDOUT"
        override def isStdout: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object STDERR extends Type {
        val value = 3
        val index = 3
        val name = "STDERR"
        override def isStderr: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends Type with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN, STDIN, STDOUT, STDERR)
      def fromValue(value: Int): Type = value match {
        case 0 => UNKNOWN
        case 1 => STDIN
        case 2 => STDOUT
        case 3 => STDERR
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = agent.ProcessIO.Data.javaDescriptor.getEnumTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = agent.ProcessIO.Data.scalaDescriptor.enums(0)
    }
    implicit class DataLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO.Data]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, ProcessIO.Data](_l) {
      def `type`: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO.Data.Type] = field(_.getType)((c_, f_) => c_.copy(`type` = Some(f_)))
      def optionalType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[ProcessIO.Data.Type]] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
      def data: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getData)((c_, f_) => c_.copy(data = Some(f_)))
      def optionalData: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.data)((c_, f_) => c_.copy(data = f_))
    }
    final val TYPE_FIELD_NUMBER = 1
    final val DATA_FIELD_NUMBER = 2
  }
  
  @SerialVersionUID(0L)
  final case class Control(
                            `type`: scala.Option[ProcessIO.Control.Type] = None,
                            ttyInfo: scala.Option[org.apache.mesos.v1.mesos.TTYInfo] = None,
                            heartbeat: scala.Option[ProcessIO.Control.Heartbeat] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Control] with com.trueaccord.lenses.Updatable[Control] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (`type`.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, `type`.get.value) }
        if (ttyInfo.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(ttyInfo.get.serializedSize) + ttyInfo.get.serializedSize }
        if (heartbeat.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(heartbeat.get.serializedSize) + heartbeat.get.serializedSize }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        `type`.foreach { __v =>
          _output__.writeEnum(1, __v.value)
        };
        ttyInfo.foreach { __v =>
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        heartbeat.foreach { __v =>
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ProcessIO.Control = {
        var __type = this.`type`
        var __ttyInfo = this.ttyInfo
        var __heartbeat = this.heartbeat
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __type = Some(agent.ProcessIO.Control.Type.fromValue(_input__.readEnum()))
            case 18 =>
              __ttyInfo = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __ttyInfo.getOrElse(org.apache.mesos.v1.mesos.TTYInfo.defaultInstance)))
            case 26 =>
              __heartbeat = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __heartbeat.getOrElse(agent.ProcessIO.Control.Heartbeat.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        agent.ProcessIO.Control(
            `type` = __type,
            ttyInfo = __ttyInfo,
            heartbeat = __heartbeat
        )
      }
      def getType: ProcessIO.Control.Type = `type`.getOrElse(agent.ProcessIO.Control.Type.UNKNOWN)
      def clearType: Control = copy(`type` = None)
      def withType(__v: ProcessIO.Control.Type): Control = copy(`type` = Some(__v))
      def getTtyInfo: org.apache.mesos.v1.mesos.TTYInfo = ttyInfo.getOrElse(org.apache.mesos.v1.mesos.TTYInfo.defaultInstance)
      def clearTtyInfo: Control = copy(ttyInfo = None)
      def withTtyInfo(__v: org.apache.mesos.v1.mesos.TTYInfo): Control = copy(ttyInfo = Some(__v))
      def getHeartbeat: ProcessIO.Control.Heartbeat = heartbeat.getOrElse(agent.ProcessIO.Control.Heartbeat.defaultInstance)
      def clearHeartbeat: Control = copy(heartbeat = None)
      def withHeartbeat(__v: ProcessIO.Control.Heartbeat): Control = copy(heartbeat = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => `type`.map(_.javaValueDescriptor).orNull
          case 2 => ttyInfo.orNull
          case 3 => heartbeat.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => `type`.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => ttyInfo.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => heartbeat.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = agent.ProcessIO.Control
  }
  
  object Control extends com.trueaccord.scalapb.GeneratedMessageCompanion[ProcessIO.Control] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[ProcessIO.Control] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): ProcessIO.Control = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      agent.ProcessIO.Control(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => agent.ProcessIO.Control.Type.fromValue(__e.getNumber)),
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[org.apache.mesos.v1.mesos.TTYInfo]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[ProcessIO.Control.Heartbeat]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[ProcessIO.Control] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        agent.ProcessIO.Control(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => agent.ProcessIO.Control.Type.fromValue(__e.number)),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[org.apache.mesos.v1.mesos.TTYInfo]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[ProcessIO.Control.Heartbeat]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = agent.ProcessIO.javaDescriptor.getNestedTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = agent.ProcessIO.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => __out = org.apache.mesos.v1.mesos.TTYInfo
        case 3 => __out = agent.ProcessIO.Control.Heartbeat
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => agent.ProcessIO.Control.Type
      }
    }
    lazy val defaultInstance = agent.ProcessIO.Control(
    )
    sealed trait Type extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = Type
      def isUnknown: Boolean = false
      def isTtyInfo: Boolean = false
      def isHeartbeat: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] = agent.ProcessIO.Control.Type
    }
    
    object Type extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] = this
      @SerialVersionUID(0L)
      case object UNKNOWN extends Type {
        val value = 0
        val index = 0
        val name = "UNKNOWN"
        override def isUnknown: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object TTY_INFO extends Type {
        val value = 1
        val index = 1
        val name = "TTY_INFO"
        override def isTtyInfo: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object HEARTBEAT extends Type {
        val value = 2
        val index = 2
        val name = "HEARTBEAT"
        override def isHeartbeat: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends Type with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(UNKNOWN, TTY_INFO, HEARTBEAT)
      def fromValue(value: Int): Type = value match {
        case 0 => UNKNOWN
        case 1 => TTY_INFO
        case 2 => HEARTBEAT
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = agent.ProcessIO.Control.javaDescriptor.getEnumTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = agent.ProcessIO.Control.scalaDescriptor.enums(0)
    }
    @SerialVersionUID(0L)
    final case class Heartbeat(
        interval: scala.Option[org.apache.mesos.v1.mesos.DurationInfo] = None
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Heartbeat] with com.trueaccord.lenses.Updatable[Heartbeat] {
        @transient
        private[this] var __serializedSizeCachedValue: Int = 0
        private[this] def __computeSerializedValue(): Int = {
          var __size = 0
          if (interval.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(interval.get.serializedSize) + interval.get.serializedSize }
          __size
        }
        final override def serializedSize: Int = {
          var read = __serializedSizeCachedValue
          if (read == 0) {
            read = __computeSerializedValue()
            __serializedSizeCachedValue = read
          }
          read
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
          interval.foreach { __v =>
            _output__.writeTag(1, 2)
            _output__.writeUInt32NoTag(__v.serializedSize)
            __v.writeTo(_output__)
          };
        }
        def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ProcessIO.Control.Heartbeat = {
          var __interval = this.interval
          var _done__ = false
          while (!_done__) {
            val _tag__ = _input__.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __interval = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __interval.getOrElse(org.apache.mesos.v1.mesos.DurationInfo.defaultInstance)))
              case tag => _input__.skipField(tag)
            }
          }
          agent.ProcessIO.Control.Heartbeat(
              interval = __interval
          )
        }
        def getInterval: org.apache.mesos.v1.mesos.DurationInfo = interval.getOrElse(org.apache.mesos.v1.mesos.DurationInfo.defaultInstance)
        def clearInterval: Heartbeat = copy(interval = None)
        def withInterval(__v: org.apache.mesos.v1.mesos.DurationInfo): Heartbeat = copy(interval = Some(__v))
        def getFieldByNumber(__fieldNumber: Int): scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => interval.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => interval.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = agent.ProcessIO.Control.Heartbeat
    }
    
    object Heartbeat extends com.trueaccord.scalapb.GeneratedMessageCompanion[ProcessIO.Control.Heartbeat] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[ProcessIO.Control.Heartbeat] = this
      def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): ProcessIO.Control.Heartbeat = {
        require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
        val __fields = javaDescriptor.getFields
        agent.ProcessIO.Control.Heartbeat(
          __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[org.apache.mesos.v1.mesos.DurationInfo]]
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[ProcessIO.Control.Heartbeat] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
          agent.ProcessIO.Control.Heartbeat(
            __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[org.apache.mesos.v1.mesos.DurationInfo]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = agent.ProcessIO.Control.javaDescriptor.getNestedTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = agent.ProcessIO.Control.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
        var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => __out = org.apache.mesos.v1.mesos.DurationInfo
        }
        __out
      }
      def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = agent.ProcessIO.Control.Heartbeat(
      )
      implicit class HeartbeatLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO.Control.Heartbeat]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, ProcessIO.Control.Heartbeat](_l) {
        def interval: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.DurationInfo] = field(_.getInterval)((c_, f_) => c_.copy(interval = Some(f_)))
        def optionalInterval: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[org.apache.mesos.v1.mesos.DurationInfo]] = field(_.interval)((c_, f_) => c_.copy(interval = f_))
      }
      final val INTERVAL_FIELD_NUMBER = 1
    }
    
    implicit class ControlLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO.Control]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, ProcessIO.Control](_l) {
      def `type`: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO.Control.Type] = field(_.getType)((c_, f_) => c_.copy(`type` = Some(f_)))
      def optionalType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[ProcessIO.Control.Type]] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
      def ttyInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.TTYInfo] = field(_.getTtyInfo)((c_, f_) => c_.copy(ttyInfo = Some(f_)))
      def optionalTtyInfo: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[org.apache.mesos.v1.mesos.TTYInfo]] = field(_.ttyInfo)((c_, f_) => c_.copy(ttyInfo = f_))
      def heartbeat: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO.Control.Heartbeat] = field(_.getHeartbeat)((c_, f_) => c_.copy(heartbeat = Some(f_)))
      def optionalHeartbeat: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[ProcessIO.Control.Heartbeat]] = field(_.heartbeat)((c_, f_) => c_.copy(heartbeat = f_))
    }
    final val TYPE_FIELD_NUMBER = 1
    final val TTY_INFO_FIELD_NUMBER = 2
    final val HEARTBEAT_FIELD_NUMBER = 3
  }
  
  implicit class ProcessIOLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, ProcessIO](_l) {
    def `type`: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO.Type] = field(_.getType)((c_, f_) => c_.copy(`type` = Some(f_)))
    def optionalType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[ProcessIO.Type]] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
    def data: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO.Data] = field(_.getData)((c_, f_) => c_.copy(data = Some(f_)))
    def optionalData: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[ProcessIO.Data]] = field(_.data)((c_, f_) => c_.copy(data = f_))
    def control: _root_.com.trueaccord.lenses.Lens[UpperPB, ProcessIO.Control] = field(_.getControl)((c_, f_) => c_.copy(control = Some(f_)))
    def optionalControl: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[ProcessIO.Control]] = field(_.control)((c_, f_) => c_.copy(control = f_))
  }
  final val TYPE_FIELD_NUMBER = 1
  final val DATA_FIELD_NUMBER = 2
  final val CONTROL_FIELD_NUMBER = 3
}
