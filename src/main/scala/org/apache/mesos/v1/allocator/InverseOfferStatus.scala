// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package org.apache.mesos.v1.allocator

import org.apache.mesos.v1.allocator

/** *
  * Describes the status of an inverse offer.
  *
  * This is a protobuf so as to be able to share the status to inverse offers
  * through endpoints such as the maintenance status endpoint.
  *
  * @param timestamp
  *   Time, since the epoch, when this status was last updated.
  */
@SerialVersionUID(0L)
final case class InverseOfferStatus(
                                     status: InverseOfferStatus.Status,
                                     frameworkId: org.apache.mesos.v1.mesos.FrameworkID,
                                     timestamp: org.apache.mesos.v1.mesos.TimeInfo
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[InverseOfferStatus] with com.trueaccord.lenses.Updatable[InverseOfferStatus] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, status.value)
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(frameworkId.serializedSize) + frameworkId.serializedSize
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(timestamp.serializedSize) + timestamp.serializedSize
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeEnum(1, status.value)
      _output__.writeTag(2, 2)
      _output__.writeUInt32NoTag(frameworkId.serializedSize)
      frameworkId.writeTo(_output__)
      _output__.writeTag(3, 2)
      _output__.writeUInt32NoTag(timestamp.serializedSize)
      timestamp.writeTo(_output__)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): InverseOfferStatus = {
      var __status = this.status
      var __frameworkId = this.frameworkId
      var __timestamp = this.timestamp
      var __requiredFields0: Long = 0x7L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __status = allocator.InverseOfferStatus.Status.fromValue(_input__.readEnum())
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __frameworkId = _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __frameworkId)
            __requiredFields0 &= 0xfffffffffffffffdL
          case 26 =>
            __timestamp = _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __timestamp)
            __requiredFields0 &= 0xfffffffffffffffbL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      allocator.InverseOfferStatus(
          status = __status,
          frameworkId = __frameworkId,
          timestamp = __timestamp
      )
    }
    def withStatus(__v: InverseOfferStatus.Status): InverseOfferStatus = copy(status = __v)
    def withFrameworkId(__v: org.apache.mesos.v1.mesos.FrameworkID): InverseOfferStatus = copy(frameworkId = __v)
    def withTimestamp(__v: org.apache.mesos.v1.mesos.TimeInfo): InverseOfferStatus = copy(timestamp = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => status.javaValueDescriptor
        case 2 => frameworkId
        case 3 => timestamp
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(status.scalaValueDescriptor)
        case 2 => frameworkId.toPMessage
        case 3 => timestamp.toPMessage
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = allocator.InverseOfferStatus
}

object InverseOfferStatus extends com.trueaccord.scalapb.GeneratedMessageCompanion[InverseOfferStatus] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[InverseOfferStatus] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): InverseOfferStatus = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    allocator.InverseOfferStatus(
      allocator.InverseOfferStatus.Status.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap(__fields.get(1)).asInstanceOf[org.apache.mesos.v1.mesos.FrameworkID],
      __fieldsMap(__fields.get(2)).asInstanceOf[org.apache.mesos.v1.mesos.TimeInfo]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[InverseOfferStatus] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      allocator.InverseOfferStatus(
        allocator.InverseOfferStatus.Status.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[org.apache.mesos.v1.mesos.FrameworkID],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[org.apache.mesos.v1.mesos.TimeInfo]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AllocatorProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AllocatorProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => __out = org.apache.mesos.v1.mesos.FrameworkID
      case 3 => __out = org.apache.mesos.v1.mesos.TimeInfo
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => allocator.InverseOfferStatus.Status
    }
  }
  lazy val defaultInstance = allocator.InverseOfferStatus(
    status = allocator.InverseOfferStatus.Status.UNKNOWN,
    frameworkId = org.apache.mesos.v1.mesos.FrameworkID.defaultInstance,
    timestamp = org.apache.mesos.v1.mesos.TimeInfo.defaultInstance
  )
  sealed trait Status extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = Status
    def isUnknown: Boolean = false
    def isAccept: Boolean = false
    def isDecline: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Status] = allocator.InverseOfferStatus.Status
  }
  
  object Status extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Status] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Status] = this
    @SerialVersionUID(0L)
    case object UNKNOWN extends Status {
      val value = 1
      val index = 0
      val name = "UNKNOWN"
      override def isUnknown: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object ACCEPT extends Status {
      val value = 2
      val index = 1
      val name = "ACCEPT"
      override def isAccept: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object DECLINE extends Status {
      val value = 3
      val index = 2
      val name = "DECLINE"
      override def isDecline: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends Status with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(UNKNOWN, ACCEPT, DECLINE)
    def fromValue(value: Int): Status = value match {
      case 1 => UNKNOWN
      case 2 => ACCEPT
      case 3 => DECLINE
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = allocator.InverseOfferStatus.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = allocator.InverseOfferStatus.scalaDescriptor.enums(0)
  }
  implicit class InverseOfferStatusLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, InverseOfferStatus]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, InverseOfferStatus](_l) {
    def status: _root_.com.trueaccord.lenses.Lens[UpperPB, InverseOfferStatus.Status] = field(_.status)((c_, f_) => c_.copy(status = f_))
    def frameworkId: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.FrameworkID] = field(_.frameworkId)((c_, f_) => c_.copy(frameworkId = f_))
    def timestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.TimeInfo] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
  }
  final val STATUS_FIELD_NUMBER = 1
  final val FRAMEWORK_ID_FIELD_NUMBER = 2
  final val TIMESTAMP_FIELD_NUMBER = 3
}
