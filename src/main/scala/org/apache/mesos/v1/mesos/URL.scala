// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package org.apache.mesos.v1.mesos

/** *
  * Represents a URL.
  */
@SerialVersionUID(0L)
final case class URL(
    scheme: String,
    address: org.apache.mesos.v1.mesos.Address,
    path: scala.Option[String] = None,
    query: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Parameter] = _root_.scala.collection.Seq.empty,
    fragment: scala.Option[String] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[URL] with com.trueaccord.lenses.Updatable[URL] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, scheme)
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(address.serializedSize) + address.serializedSize
      if (path.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, path.get) }
      query.foreach(query => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(query.serializedSize) + query.serializedSize)
      if (fragment.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, fragment.get) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeString(1, scheme)
      _output__.writeTag(2, 2)
      _output__.writeUInt32NoTag(address.serializedSize)
      address.writeTo(_output__)
      path.foreach { __v =>
        _output__.writeString(3, __v)
      };
      query.foreach { __v =>
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      fragment.foreach { __v =>
        _output__.writeString(5, __v)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.apache.mesos.v1.mesos.URL = {
      var __scheme = this.scheme
      var __address = this.address
      var __path = this.path
      val __query = (_root_.scala.collection.immutable.Vector.newBuilder[org.apache.mesos.v1.mesos.Parameter] ++= this.query)
      var __fragment = this.fragment
      var __requiredFields0: Long = 0x3L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __scheme = _input__.readString()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __address = _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __address)
            __requiredFields0 &= 0xfffffffffffffffdL
          case 26 =>
            __path = Some(_input__.readString())
          case 34 =>
            __query += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, org.apache.mesos.v1.mesos.Parameter.defaultInstance)
          case 42 =>
            __fragment = Some(_input__.readString())
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      org.apache.mesos.v1.mesos.URL(
          scheme = __scheme,
          address = __address,
          path = __path,
          query = __query.result(),
          fragment = __fragment
      )
    }
    def withScheme(__v: String): URL = copy(scheme = __v)
    def withAddress(__v: org.apache.mesos.v1.mesos.Address): URL = copy(address = __v)
    def getPath: String = path.getOrElse("")
    def clearPath: URL = copy(path = None)
    def withPath(__v: String): URL = copy(path = Some(__v))
    def clearQuery = copy(query = _root_.scala.collection.Seq.empty)
    def addQuery(__vs: org.apache.mesos.v1.mesos.Parameter*): URL = addAllQuery(__vs)
    def addAllQuery(__vs: TraversableOnce[org.apache.mesos.v1.mesos.Parameter]): URL = copy(query = query ++ __vs)
    def withQuery(__v: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Parameter]): URL = copy(query = __v)
    def getFragment: String = fragment.getOrElse("")
    def clearFragment: URL = copy(fragment = None)
    def withFragment(__v: String): URL = copy(fragment = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => scheme
        case 2 => address
        case 3 => path.orNull
        case 4 => query
        case 5 => fragment.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(scheme)
        case 2 => address.toPMessage
        case 3 => path.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PRepeated(query.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 5 => fragment.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.apache.mesos.v1.mesos.URL
}

object URL extends com.trueaccord.scalapb.GeneratedMessageCompanion[org.apache.mesos.v1.mesos.URL] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[org.apache.mesos.v1.mesos.URL] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.apache.mesos.v1.mesos.URL = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.apache.mesos.v1.mesos.URL(
      __fieldsMap(__fields.get(0)).asInstanceOf[String],
      __fieldsMap(__fields.get(1)).asInstanceOf[org.apache.mesos.v1.mesos.Address],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
      __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Parameter]],
      __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[String]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.apache.mesos.v1.mesos.URL] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.apache.mesos.v1.mesos.URL(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[org.apache.mesos.v1.mesos.Address],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Parameter]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[String]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MesosProto.javaDescriptor.getMessageTypes.get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MesosProto.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => __out = org.apache.mesos.v1.mesos.Address
      case 4 => __out = org.apache.mesos.v1.mesos.Parameter
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.apache.mesos.v1.mesos.URL(
    scheme = "",
    address = org.apache.mesos.v1.mesos.Address.defaultInstance
  )
  implicit class URLLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.URL]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, org.apache.mesos.v1.mesos.URL](_l) {
    def scheme: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.scheme)((c_, f_) => c_.copy(scheme = f_))
    def address: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.Address] = field(_.address)((c_, f_) => c_.copy(address = f_))
    def path: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPath)((c_, f_) => c_.copy(path = Some(f_)))
    def optionalPath: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.path)((c_, f_) => c_.copy(path = f_))
    def query: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Parameter]] = field(_.query)((c_, f_) => c_.copy(query = f_))
    def fragment: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getFragment)((c_, f_) => c_.copy(fragment = Some(f_)))
    def optionalFragment: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.fragment)((c_, f_) => c_.copy(fragment = f_))
  }
  final val SCHEME_FIELD_NUMBER = 1
  final val ADDRESS_FIELD_NUMBER = 2
  final val PATH_FIELD_NUMBER = 3
  final val QUERY_FIELD_NUMBER = 4
  final val FRAGMENT_FIELD_NUMBER = 5
}
