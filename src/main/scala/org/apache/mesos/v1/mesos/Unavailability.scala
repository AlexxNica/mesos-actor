// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package org.apache.mesos.v1.mesos

/** *
  * Represents an interval, from a given start time over a given duration.
  * This interval pertains to an unavailability event, such as maintenance,
  * and is not a generic interval.
  *
  * @param duration
  *   When added to `start`, this represents the end of the interval.
  *   If unspecified, the duration is assumed to be infinite.
  */
@SerialVersionUID(0L)
final case class Unavailability(
    start: org.apache.mesos.v1.mesos.TimeInfo,
    duration: scala.Option[org.apache.mesos.v1.mesos.DurationInfo] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Unavailability] with com.trueaccord.lenses.Updatable[Unavailability] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(start.serializedSize) + start.serializedSize
      if (duration.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(duration.get.serializedSize) + duration.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeTag(1, 2)
      _output__.writeUInt32NoTag(start.serializedSize)
      start.writeTo(_output__)
      duration.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.apache.mesos.v1.mesos.Unavailability = {
      var __start = this.start
      var __duration = this.duration
      var __requiredFields0: Long = 0x1L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __start = _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __start)
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __duration = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __duration.getOrElse(org.apache.mesos.v1.mesos.DurationInfo.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      org.apache.mesos.v1.mesos.Unavailability(
          start = __start,
          duration = __duration
      )
    }
    def withStart(__v: org.apache.mesos.v1.mesos.TimeInfo): Unavailability = copy(start = __v)
    def getDuration: org.apache.mesos.v1.mesos.DurationInfo = duration.getOrElse(org.apache.mesos.v1.mesos.DurationInfo.defaultInstance)
    def clearDuration: Unavailability = copy(duration = None)
    def withDuration(__v: org.apache.mesos.v1.mesos.DurationInfo): Unavailability = copy(duration = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => start
        case 2 => duration.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => start.toPMessage
        case 2 => duration.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.apache.mesos.v1.mesos.Unavailability
}

object Unavailability extends com.trueaccord.scalapb.GeneratedMessageCompanion[org.apache.mesos.v1.mesos.Unavailability] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[org.apache.mesos.v1.mesos.Unavailability] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.apache.mesos.v1.mesos.Unavailability = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.apache.mesos.v1.mesos.Unavailability(
      __fieldsMap(__fields.get(0)).asInstanceOf[org.apache.mesos.v1.mesos.TimeInfo],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[org.apache.mesos.v1.mesos.DurationInfo]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.apache.mesos.v1.mesos.Unavailability] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.apache.mesos.v1.mesos.Unavailability(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[org.apache.mesos.v1.mesos.TimeInfo],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[org.apache.mesos.v1.mesos.DurationInfo]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MesosProto.javaDescriptor.getMessageTypes.get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MesosProto.scalaDescriptor.messages(11)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => __out = org.apache.mesos.v1.mesos.TimeInfo
      case 2 => __out = org.apache.mesos.v1.mesos.DurationInfo
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.apache.mesos.v1.mesos.Unavailability(
    start = org.apache.mesos.v1.mesos.TimeInfo.defaultInstance
  )
  implicit class UnavailabilityLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.Unavailability]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, org.apache.mesos.v1.mesos.Unavailability](_l) {
    def start: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.TimeInfo] = field(_.start)((c_, f_) => c_.copy(start = f_))
    def duration: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.DurationInfo] = field(_.getDuration)((c_, f_) => c_.copy(duration = Some(f_)))
    def optionalDuration: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[org.apache.mesos.v1.mesos.DurationInfo]] = field(_.duration)((c_, f_) => c_.copy(duration = f_))
  }
  final val START_FIELD_NUMBER = 1
  final val DURATION_FIELD_NUMBER = 2
}
