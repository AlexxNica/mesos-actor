// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package org.apache.mesos.v1.mesos

/** *
  * Describes a Role. Roles can be used to specify that certain resources are
  * reserved for the use of one or more frameworks.
  */
@SerialVersionUID(0L)
final case class Role(
    name: String,
    weight: Double,
    frameworks: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.FrameworkID] = _root_.scala.collection.Seq.empty,
    resources: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource] = _root_.scala.collection.Seq.empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Role] with com.trueaccord.lenses.Updatable[Role] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, name)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(2, weight)
      frameworks.foreach(frameworks => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(frameworks.serializedSize) + frameworks.serializedSize)
      resources.foreach(resources => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(resources.serializedSize) + resources.serializedSize)
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeString(1, name)
      _output__.writeDouble(2, weight)
      frameworks.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      resources.foreach { __v =>
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.apache.mesos.v1.mesos.Role = {
      var __name = this.name
      var __weight = this.weight
      val __frameworks = (_root_.scala.collection.immutable.Vector.newBuilder[org.apache.mesos.v1.mesos.FrameworkID] ++= this.frameworks)
      val __resources = (_root_.scala.collection.immutable.Vector.newBuilder[org.apache.mesos.v1.mesos.Resource] ++= this.resources)
      var __requiredFields0: Long = 0x3L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = _input__.readString()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 17 =>
            __weight = _input__.readDouble()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 26 =>
            __frameworks += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, org.apache.mesos.v1.mesos.FrameworkID.defaultInstance)
          case 34 =>
            __resources += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, org.apache.mesos.v1.mesos.Resource.defaultInstance)
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      org.apache.mesos.v1.mesos.Role(
          name = __name,
          weight = __weight,
          frameworks = __frameworks.result(),
          resources = __resources.result()
      )
    }
    def withName(__v: String): Role = copy(name = __v)
    def withWeight(__v: Double): Role = copy(weight = __v)
    def clearFrameworks = copy(frameworks = _root_.scala.collection.Seq.empty)
    def addFrameworks(__vs: org.apache.mesos.v1.mesos.FrameworkID*): Role = addAllFrameworks(__vs)
    def addAllFrameworks(__vs: TraversableOnce[org.apache.mesos.v1.mesos.FrameworkID]): Role = copy(frameworks = frameworks ++ __vs)
    def withFrameworks(__v: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.FrameworkID]): Role = copy(frameworks = __v)
    def clearResources = copy(resources = _root_.scala.collection.Seq.empty)
    def addResources(__vs: org.apache.mesos.v1.mesos.Resource*): Role = addAllResources(__vs)
    def addAllResources(__vs: TraversableOnce[org.apache.mesos.v1.mesos.Resource]): Role = copy(resources = resources ++ __vs)
    def withResources(__v: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource]): Role = copy(resources = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => name
        case 2 => weight
        case 3 => frameworks
        case 4 => resources
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => _root_.scalapb.descriptors.PDouble(weight)
        case 3 => _root_.scalapb.descriptors.PRepeated(frameworks.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 4 => _root_.scalapb.descriptors.PRepeated(resources.map(_.toPMessage)(_root_.scala.collection.breakOut))
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.apache.mesos.v1.mesos.Role
}

object Role extends com.trueaccord.scalapb.GeneratedMessageCompanion[org.apache.mesos.v1.mesos.Role] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[org.apache.mesos.v1.mesos.Role] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.apache.mesos.v1.mesos.Role = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.apache.mesos.v1.mesos.Role(
      __fieldsMap(__fields.get(0)).asInstanceOf[String],
      __fieldsMap(__fields.get(1)).asInstanceOf[Double],
      __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.FrameworkID]],
      __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.apache.mesos.v1.mesos.Role] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.apache.mesos.v1.mesos.Role(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[Double],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.FrameworkID]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource]]).getOrElse(_root_.scala.collection.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MesosProto.javaDescriptor.getMessageTypes.get(71)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MesosProto.scalaDescriptor.messages(71)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => __out = org.apache.mesos.v1.mesos.FrameworkID
      case 4 => __out = org.apache.mesos.v1.mesos.Resource
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.apache.mesos.v1.mesos.Role(
    name = "",
    weight = 0.0
  )
  implicit class RoleLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.Role]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, org.apache.mesos.v1.mesos.Role](_l) {
    def name: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def weight: _root_.com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.weight)((c_, f_) => c_.copy(weight = f_))
    def frameworks: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.FrameworkID]] = field(_.frameworks)((c_, f_) => c_.copy(frameworks = f_))
    def resources: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource]] = field(_.resources)((c_, f_) => c_.copy(resources = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val WEIGHT_FIELD_NUMBER = 2
  final val FRAMEWORKS_FIELD_NUMBER = 3
  final val RESOURCES_FIELD_NUMBER = 4
}
