// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package org.apache.mesos.v1.mesos

/** *
  * Describes a task, similar to `TaskInfo`.
  *
  * `Task` is used in some of the Mesos messages found below.
  * `Task` is used instead of `TaskInfo` if:
  *   1) we need additional IDs, such as a specific
  *      framework, executor, or agent; or
  *   2) we do not need the additional data, such as the command run by the
  *      task or the health checks.  These additional fields may be large and
  *      unnecessary for some Mesos messages.
  *
  * `Task` is generally constructed from a `TaskInfo`.  See protobuf::createTask.
  *
  * @param state
  *   Latest state of the task.
  * @param statusUpdateState
  *   These fields correspond to the state and uuid of the latest
  *   status update forwarded to the master.
  *   NOTE: Either both the fields must be set or both must be unset.
  * @param discovery
  *   Service discovery information for the task. It is not interpreted
  *   or acted upon by Mesos. It is up to a service discovery system
  *   to use this information as needed and to handle tasks without
  *   service discovery information.
  * @param container
  *   Container information for the task.
  * @param user
  *   Specific user under which task is running.
  */
@SerialVersionUID(0L)
final case class Task(
    name: String,
    taskId: org.apache.mesos.v1.mesos.TaskID,
    frameworkId: org.apache.mesos.v1.mesos.FrameworkID,
    executorId: scala.Option[org.apache.mesos.v1.mesos.ExecutorID] = None,
    agentId: org.apache.mesos.v1.mesos.AgentID,
    state: org.apache.mesos.v1.mesos.TaskState,
    resources: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource] = _root_.scala.collection.Seq.empty,
    statuses: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.TaskStatus] = _root_.scala.collection.Seq.empty,
    statusUpdateState: scala.Option[org.apache.mesos.v1.mesos.TaskState] = None,
    statusUpdateUuid: scala.Option[_root_.com.google.protobuf.ByteString] = None,
    labels: scala.Option[org.apache.mesos.v1.mesos.Labels] = None,
    discovery: scala.Option[org.apache.mesos.v1.mesos.DiscoveryInfo] = None,
    container: scala.Option[org.apache.mesos.v1.mesos.ContainerInfo] = None,
    user: scala.Option[String] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Task] with com.trueaccord.lenses.Updatable[Task] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, name)
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(taskId.serializedSize) + taskId.serializedSize
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(frameworkId.serializedSize) + frameworkId.serializedSize
      if (executorId.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(executorId.get.serializedSize) + executorId.get.serializedSize }
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(agentId.serializedSize) + agentId.serializedSize
      __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, state.value)
      resources.foreach(resources => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(resources.serializedSize) + resources.serializedSize)
      statuses.foreach(statuses => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(statuses.serializedSize) + statuses.serializedSize)
      if (statusUpdateState.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(9, statusUpdateState.get.value) }
      if (statusUpdateUuid.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(10, statusUpdateUuid.get) }
      if (labels.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(labels.get.serializedSize) + labels.get.serializedSize }
      if (discovery.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(discovery.get.serializedSize) + discovery.get.serializedSize }
      if (container.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(container.get.serializedSize) + container.get.serializedSize }
      if (user.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(14, user.get) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeString(1, name)
      _output__.writeTag(2, 2)
      _output__.writeUInt32NoTag(taskId.serializedSize)
      taskId.writeTo(_output__)
      _output__.writeTag(3, 2)
      _output__.writeUInt32NoTag(frameworkId.serializedSize)
      frameworkId.writeTo(_output__)
      executorId.foreach { __v =>
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      _output__.writeTag(5, 2)
      _output__.writeUInt32NoTag(agentId.serializedSize)
      agentId.writeTo(_output__)
      _output__.writeEnum(6, state.value)
      resources.foreach { __v =>
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      statuses.foreach { __v =>
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      statusUpdateState.foreach { __v =>
        _output__.writeEnum(9, __v.value)
      };
      statusUpdateUuid.foreach { __v =>
        _output__.writeBytes(10, __v)
      };
      labels.foreach { __v =>
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      discovery.foreach { __v =>
        _output__.writeTag(12, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      container.foreach { __v =>
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      user.foreach { __v =>
        _output__.writeString(14, __v)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.apache.mesos.v1.mesos.Task = {
      var __name = this.name
      var __taskId = this.taskId
      var __frameworkId = this.frameworkId
      var __executorId = this.executorId
      var __agentId = this.agentId
      var __state = this.state
      val __resources = (_root_.scala.collection.immutable.Vector.newBuilder[org.apache.mesos.v1.mesos.Resource] ++= this.resources)
      val __statuses = (_root_.scala.collection.immutable.Vector.newBuilder[org.apache.mesos.v1.mesos.TaskStatus] ++= this.statuses)
      var __statusUpdateState = this.statusUpdateState
      var __statusUpdateUuid = this.statusUpdateUuid
      var __labels = this.labels
      var __discovery = this.discovery
      var __container = this.container
      var __user = this.user
      var __requiredFields0: Long = 0x1fL
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = _input__.readString()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __taskId = _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __taskId)
            __requiredFields0 &= 0xfffffffffffffffdL
          case 26 =>
            __frameworkId = _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __frameworkId)
            __requiredFields0 &= 0xfffffffffffffffbL
          case 34 =>
            __executorId = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __executorId.getOrElse(org.apache.mesos.v1.mesos.ExecutorID.defaultInstance)))
          case 42 =>
            __agentId = _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __agentId)
            __requiredFields0 &= 0xfffffffffffffff7L
          case 48 =>
            __state = org.apache.mesos.v1.mesos.TaskState.fromValue(_input__.readEnum())
            __requiredFields0 &= 0xffffffffffffffefL
          case 58 =>
            __resources += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, org.apache.mesos.v1.mesos.Resource.defaultInstance)
          case 66 =>
            __statuses += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, org.apache.mesos.v1.mesos.TaskStatus.defaultInstance)
          case 72 =>
            __statusUpdateState = Some(org.apache.mesos.v1.mesos.TaskState.fromValue(_input__.readEnum()))
          case 82 =>
            __statusUpdateUuid = Some(_input__.readBytes())
          case 90 =>
            __labels = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __labels.getOrElse(org.apache.mesos.v1.mesos.Labels.defaultInstance)))
          case 98 =>
            __discovery = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __discovery.getOrElse(org.apache.mesos.v1.mesos.DiscoveryInfo.defaultInstance)))
          case 106 =>
            __container = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __container.getOrElse(org.apache.mesos.v1.mesos.ContainerInfo.defaultInstance)))
          case 114 =>
            __user = Some(_input__.readString())
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      org.apache.mesos.v1.mesos.Task(
          name = __name,
          taskId = __taskId,
          frameworkId = __frameworkId,
          executorId = __executorId,
          agentId = __agentId,
          state = __state,
          resources = __resources.result(),
          statuses = __statuses.result(),
          statusUpdateState = __statusUpdateState,
          statusUpdateUuid = __statusUpdateUuid,
          labels = __labels,
          discovery = __discovery,
          container = __container,
          user = __user
      )
    }
    def withName(__v: String): Task = copy(name = __v)
    def withTaskId(__v: org.apache.mesos.v1.mesos.TaskID): Task = copy(taskId = __v)
    def withFrameworkId(__v: org.apache.mesos.v1.mesos.FrameworkID): Task = copy(frameworkId = __v)
    def getExecutorId: org.apache.mesos.v1.mesos.ExecutorID = executorId.getOrElse(org.apache.mesos.v1.mesos.ExecutorID.defaultInstance)
    def clearExecutorId: Task = copy(executorId = None)
    def withExecutorId(__v: org.apache.mesos.v1.mesos.ExecutorID): Task = copy(executorId = Some(__v))
    def withAgentId(__v: org.apache.mesos.v1.mesos.AgentID): Task = copy(agentId = __v)
    def withState(__v: org.apache.mesos.v1.mesos.TaskState): Task = copy(state = __v)
    def clearResources = copy(resources = _root_.scala.collection.Seq.empty)
    def addResources(__vs: org.apache.mesos.v1.mesos.Resource*): Task = addAllResources(__vs)
    def addAllResources(__vs: TraversableOnce[org.apache.mesos.v1.mesos.Resource]): Task = copy(resources = resources ++ __vs)
    def withResources(__v: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource]): Task = copy(resources = __v)
    def clearStatuses = copy(statuses = _root_.scala.collection.Seq.empty)
    def addStatuses(__vs: org.apache.mesos.v1.mesos.TaskStatus*): Task = addAllStatuses(__vs)
    def addAllStatuses(__vs: TraversableOnce[org.apache.mesos.v1.mesos.TaskStatus]): Task = copy(statuses = statuses ++ __vs)
    def withStatuses(__v: _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.TaskStatus]): Task = copy(statuses = __v)
    def getStatusUpdateState: org.apache.mesos.v1.mesos.TaskState = statusUpdateState.getOrElse(org.apache.mesos.v1.mesos.TaskState.TASK_STAGING)
    def clearStatusUpdateState: Task = copy(statusUpdateState = None)
    def withStatusUpdateState(__v: org.apache.mesos.v1.mesos.TaskState): Task = copy(statusUpdateState = Some(__v))
    def getStatusUpdateUuid: _root_.com.google.protobuf.ByteString = statusUpdateUuid.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearStatusUpdateUuid: Task = copy(statusUpdateUuid = None)
    def withStatusUpdateUuid(__v: _root_.com.google.protobuf.ByteString): Task = copy(statusUpdateUuid = Some(__v))
    def getLabels: org.apache.mesos.v1.mesos.Labels = labels.getOrElse(org.apache.mesos.v1.mesos.Labels.defaultInstance)
    def clearLabels: Task = copy(labels = None)
    def withLabels(__v: org.apache.mesos.v1.mesos.Labels): Task = copy(labels = Some(__v))
    def getDiscovery: org.apache.mesos.v1.mesos.DiscoveryInfo = discovery.getOrElse(org.apache.mesos.v1.mesos.DiscoveryInfo.defaultInstance)
    def clearDiscovery: Task = copy(discovery = None)
    def withDiscovery(__v: org.apache.mesos.v1.mesos.DiscoveryInfo): Task = copy(discovery = Some(__v))
    def getContainer: org.apache.mesos.v1.mesos.ContainerInfo = container.getOrElse(org.apache.mesos.v1.mesos.ContainerInfo.defaultInstance)
    def clearContainer: Task = copy(container = None)
    def withContainer(__v: org.apache.mesos.v1.mesos.ContainerInfo): Task = copy(container = Some(__v))
    def getUser: String = user.getOrElse("")
    def clearUser: Task = copy(user = None)
    def withUser(__v: String): Task = copy(user = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => name
        case 2 => taskId
        case 3 => frameworkId
        case 4 => executorId.orNull
        case 5 => agentId
        case 6 => state.javaValueDescriptor
        case 7 => resources
        case 8 => statuses
        case 9 => statusUpdateState.map(_.javaValueDescriptor).orNull
        case 10 => statusUpdateUuid.orNull
        case 11 => labels.orNull
        case 12 => discovery.orNull
        case 13 => container.orNull
        case 14 => user.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => taskId.toPMessage
        case 3 => frameworkId.toPMessage
        case 4 => executorId.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => agentId.toPMessage
        case 6 => _root_.scalapb.descriptors.PEnum(state.scalaValueDescriptor)
        case 7 => _root_.scalapb.descriptors.PRepeated(resources.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 8 => _root_.scalapb.descriptors.PRepeated(statuses.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 9 => statusUpdateState.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => statusUpdateUuid.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => labels.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => discovery.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => container.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => user.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.apache.mesos.v1.mesos.Task
}

object Task extends com.trueaccord.scalapb.GeneratedMessageCompanion[org.apache.mesos.v1.mesos.Task] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[org.apache.mesos.v1.mesos.Task] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.apache.mesos.v1.mesos.Task = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.apache.mesos.v1.mesos.Task(
      __fieldsMap(__fields.get(0)).asInstanceOf[String],
      __fieldsMap(__fields.get(1)).asInstanceOf[org.apache.mesos.v1.mesos.TaskID],
      __fieldsMap(__fields.get(2)).asInstanceOf[org.apache.mesos.v1.mesos.FrameworkID],
      __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[org.apache.mesos.v1.mesos.ExecutorID]],
      __fieldsMap(__fields.get(4)).asInstanceOf[org.apache.mesos.v1.mesos.AgentID],
      org.apache.mesos.v1.mesos.TaskState.fromValue(__fieldsMap(__fields.get(5)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.getOrElse(__fields.get(6), Nil).asInstanceOf[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource]],
      __fieldsMap.getOrElse(__fields.get(7), Nil).asInstanceOf[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.TaskStatus]],
      __fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => org.apache.mesos.v1.mesos.TaskState.fromValue(__e.getNumber)),
      __fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]],
      __fieldsMap.get(__fields.get(10)).asInstanceOf[scala.Option[org.apache.mesos.v1.mesos.Labels]],
      __fieldsMap.get(__fields.get(11)).asInstanceOf[scala.Option[org.apache.mesos.v1.mesos.DiscoveryInfo]],
      __fieldsMap.get(__fields.get(12)).asInstanceOf[scala.Option[org.apache.mesos.v1.mesos.ContainerInfo]],
      __fieldsMap.get(__fields.get(13)).asInstanceOf[scala.Option[String]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.apache.mesos.v1.mesos.Task] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.apache.mesos.v1.mesos.Task(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[org.apache.mesos.v1.mesos.TaskID],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[org.apache.mesos.v1.mesos.FrameworkID],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[org.apache.mesos.v1.mesos.ExecutorID]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).get.as[org.apache.mesos.v1.mesos.AgentID],
        org.apache.mesos.v1.mesos.TaskState.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.collection.Seq[org.apache.mesos.v1.mesos.TaskStatus]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => org.apache.mesos.v1.mesos.TaskState.fromValue(__e.number)),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[org.apache.mesos.v1.mesos.Labels]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[scala.Option[org.apache.mesos.v1.mesos.DiscoveryInfo]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[scala.Option[org.apache.mesos.v1.mesos.ContainerInfo]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[scala.Option[String]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MesosProto.javaDescriptor.getMessageTypes.get(41)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MesosProto.scalaDescriptor.messages(41)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => __out = org.apache.mesos.v1.mesos.TaskID
      case 3 => __out = org.apache.mesos.v1.mesos.FrameworkID
      case 4 => __out = org.apache.mesos.v1.mesos.ExecutorID
      case 5 => __out = org.apache.mesos.v1.mesos.AgentID
      case 7 => __out = org.apache.mesos.v1.mesos.Resource
      case 8 => __out = org.apache.mesos.v1.mesos.TaskStatus
      case 11 => __out = org.apache.mesos.v1.mesos.Labels
      case 12 => __out = org.apache.mesos.v1.mesos.DiscoveryInfo
      case 13 => __out = org.apache.mesos.v1.mesos.ContainerInfo
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 6 => org.apache.mesos.v1.mesos.TaskState
      case 9 => org.apache.mesos.v1.mesos.TaskState
    }
  }
  lazy val defaultInstance = org.apache.mesos.v1.mesos.Task(
    name = "",
    taskId = org.apache.mesos.v1.mesos.TaskID.defaultInstance,
    frameworkId = org.apache.mesos.v1.mesos.FrameworkID.defaultInstance,
    agentId = org.apache.mesos.v1.mesos.AgentID.defaultInstance,
    state = org.apache.mesos.v1.mesos.TaskState.TASK_STAGING
  )
  implicit class TaskLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.Task]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, org.apache.mesos.v1.mesos.Task](_l) {
    def name: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def taskId: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.TaskID] = field(_.taskId)((c_, f_) => c_.copy(taskId = f_))
    def frameworkId: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.FrameworkID] = field(_.frameworkId)((c_, f_) => c_.copy(frameworkId = f_))
    def executorId: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.ExecutorID] = field(_.getExecutorId)((c_, f_) => c_.copy(executorId = Some(f_)))
    def optionalExecutorId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[org.apache.mesos.v1.mesos.ExecutorID]] = field(_.executorId)((c_, f_) => c_.copy(executorId = f_))
    def agentId: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.AgentID] = field(_.agentId)((c_, f_) => c_.copy(agentId = f_))
    def state: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.TaskState] = field(_.state)((c_, f_) => c_.copy(state = f_))
    def resources: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.Resource]] = field(_.resources)((c_, f_) => c_.copy(resources = f_))
    def statuses: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[org.apache.mesos.v1.mesos.TaskStatus]] = field(_.statuses)((c_, f_) => c_.copy(statuses = f_))
    def statusUpdateState: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.TaskState] = field(_.getStatusUpdateState)((c_, f_) => c_.copy(statusUpdateState = Some(f_)))
    def optionalStatusUpdateState: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[org.apache.mesos.v1.mesos.TaskState]] = field(_.statusUpdateState)((c_, f_) => c_.copy(statusUpdateState = f_))
    def statusUpdateUuid: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getStatusUpdateUuid)((c_, f_) => c_.copy(statusUpdateUuid = Some(f_)))
    def optionalStatusUpdateUuid: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.statusUpdateUuid)((c_, f_) => c_.copy(statusUpdateUuid = f_))
    def labels: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.Labels] = field(_.getLabels)((c_, f_) => c_.copy(labels = Some(f_)))
    def optionalLabels: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[org.apache.mesos.v1.mesos.Labels]] = field(_.labels)((c_, f_) => c_.copy(labels = f_))
    def discovery: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.DiscoveryInfo] = field(_.getDiscovery)((c_, f_) => c_.copy(discovery = Some(f_)))
    def optionalDiscovery: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[org.apache.mesos.v1.mesos.DiscoveryInfo]] = field(_.discovery)((c_, f_) => c_.copy(discovery = f_))
    def container: _root_.com.trueaccord.lenses.Lens[UpperPB, org.apache.mesos.v1.mesos.ContainerInfo] = field(_.getContainer)((c_, f_) => c_.copy(container = Some(f_)))
    def optionalContainer: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[org.apache.mesos.v1.mesos.ContainerInfo]] = field(_.container)((c_, f_) => c_.copy(container = f_))
    def user: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getUser)((c_, f_) => c_.copy(user = Some(f_)))
    def optionalUser: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.user)((c_, f_) => c_.copy(user = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val TASK_ID_FIELD_NUMBER = 2
  final val FRAMEWORK_ID_FIELD_NUMBER = 3
  final val EXECUTOR_ID_FIELD_NUMBER = 4
  final val AGENT_ID_FIELD_NUMBER = 5
  final val STATE_FIELD_NUMBER = 6
  final val RESOURCES_FIELD_NUMBER = 7
  final val STATUSES_FIELD_NUMBER = 8
  final val STATUS_UPDATE_STATE_FIELD_NUMBER = 9
  final val STATUS_UPDATE_UUID_FIELD_NUMBER = 10
  final val LABELS_FIELD_NUMBER = 11
  final val DISCOVERY_FIELD_NUMBER = 12
  final val CONTAINER_FIELD_NUMBER = 13
  final val USER_FIELD_NUMBER = 14
}
