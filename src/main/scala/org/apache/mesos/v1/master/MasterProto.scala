// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package org.apache.mesos.v1.master

import org.apache.mesos.v1.maintenance.MaintenanceProto
import org.apache.mesos.v1.{maintenance, quota}
import org.apache.mesos.v1.quota.QuotaProto

object MasterProto {
  private lazy val ProtoBytes: Array[Byte] =
      com.trueaccord.scalapb.Encoding.fromBase64(scala.collection.Seq(
  """ChxtZXNvcy92MS9tYXN0ZXIvbWFzdGVyLnByb3RvEg9tZXNvcy52MS5tYXN0ZXIaFG1lc29zL3YxL21lc29zLnByb3RvGiZtZ
  XNvcy92MS9tYWludGVuYW5jZS9tYWludGVuYW5jZS5wcm90bxoabWVzb3MvdjEvcXVvdGEvcXVvdGEucHJvdG8iyRYKBENhbGwSL
  goEdHlwZRgBIAEoDjIaLm1lc29zLnYxLm1hc3Rlci5DYWxsLlR5cGVSBHR5cGUSQQoLZ2V0X21ldHJpY3MYAiABKAsyIC5tZXNvc
  y52MS5tYXN0ZXIuQ2FsbC5HZXRNZXRyaWNzUgpnZXRNZXRyaWNzElEKEXNldF9sb2dnaW5nX2xldmVsGAMgASgLMiUubWVzb3Mud
  jEubWFzdGVyLkNhbGwuU2V0TG9nZ2luZ0xldmVsUg9zZXRMb2dnaW5nTGV2ZWwSPgoKbGlzdF9maWxlcxgEIAEoCzIfLm1lc29zL
  nYxLm1hc3Rlci5DYWxsLkxpc3RGaWxlc1IJbGlzdEZpbGVzEjsKCXJlYWRfZmlsZRgFIAEoCzIeLm1lc29zLnYxLm1hc3Rlci5DY
  WxsLlJlYWRGaWxlUghyZWFkRmlsZRJKCg51cGRhdGVfd2VpZ2h0cxgGIAEoCzIjLm1lc29zLnYxLm1hc3Rlci5DYWxsLlVwZGF0Z
  VdlaWdodHNSDXVwZGF0ZVdlaWdodHMSUwoRcmVzZXJ2ZV9yZXNvdXJjZXMYByABKAsyJi5tZXNvcy52MS5tYXN0ZXIuQ2FsbC5SZ
  XNlcnZlUmVzb3VyY2VzUhByZXNlcnZlUmVzb3VyY2VzElkKE3VucmVzZXJ2ZV9yZXNvdXJjZXMYCCABKAsyKC5tZXNvcy52MS5tY
  XN0ZXIuQ2FsbC5VbnJlc2VydmVSZXNvdXJjZXNSEnVucmVzZXJ2ZVJlc291cmNlcxJKCg5jcmVhdGVfdm9sdW1lcxgJIAEoCzIjL
  m1lc29zLnYxLm1hc3Rlci5DYWxsLkNyZWF0ZVZvbHVtZXNSDWNyZWF0ZVZvbHVtZXMSTQoPZGVzdHJveV92b2x1bWVzGAogASgLM
  iQubWVzb3MudjEubWFzdGVyLkNhbGwuRGVzdHJveVZvbHVtZXNSDmRlc3Ryb3lWb2x1bWVzEm8KG3VwZGF0ZV9tYWludGVuYW5jZ
  V9zY2hlZHVsZRgLIAEoCzIvLm1lc29zLnYxLm1hc3Rlci5DYWxsLlVwZGF0ZU1haW50ZW5hbmNlU2NoZWR1bGVSGXVwZGF0ZU1ha
  W50ZW5hbmNlU2NoZWR1bGUSUwoRc3RhcnRfbWFpbnRlbmFuY2UYDCABKAsyJi5tZXNvcy52MS5tYXN0ZXIuQ2FsbC5TdGFydE1ha
  W50ZW5hbmNlUhBzdGFydE1haW50ZW5hbmNlElAKEHN0b3BfbWFpbnRlbmFuY2UYDSABKAsyJS5tZXNvcy52MS5tYXN0ZXIuQ2Fsb
  C5TdG9wTWFpbnRlbmFuY2VSD3N0b3BNYWludGVuYW5jZRI7CglzZXRfcXVvdGEYDiABKAsyHi5tZXNvcy52MS5tYXN0ZXIuQ2Fsb
  C5TZXRRdW90YVIIc2V0UXVvdGESRAoMcmVtb3ZlX3F1b3RhGA8gASgLMiEubWVzb3MudjEubWFzdGVyLkNhbGwuUmVtb3ZlUXVvd
  GFSC3JlbW92ZVF1b3RhGj4KCkdldE1ldHJpY3MSMAoHdGltZW91dBgBIAEoCzIWLm1lc29zLnYxLkR1cmF0aW9uSW5mb1IHdGltZ
  W91dBpbCg9TZXRMb2dnaW5nTGV2ZWwSFAoFbGV2ZWwYASACKA1SBWxldmVsEjIKCGR1cmF0aW9uGAIgAigLMhYubWVzb3MudjEuR
  HVyYXRpb25JbmZvUghkdXJhdGlvbhofCglMaXN0RmlsZXMSEgoEcGF0aBgBIAIoCVIEcGF0aBpOCghSZWFkRmlsZRISCgRwYXRoG
  AEgAigJUgRwYXRoEhYKBm9mZnNldBgCIAIoBFIGb2Zmc2V0EhYKBmxlbmd0aBgDIAEoBFIGbGVuZ3RoGkgKDVVwZGF0ZVdlaWdod
  HMSNwoMd2VpZ2h0X2luZm9zGAEgAygLMhQubWVzb3MudjEuV2VpZ2h0SW5mb1ILd2VpZ2h0SW5mb3MacgoQUmVzZXJ2ZVJlc291c
  mNlcxIsCghhZ2VudF9pZBgBIAIoCzIRLm1lc29zLnYxLkFnZW50SURSB2FnZW50SWQSMAoJcmVzb3VyY2VzGAIgAygLMhIubWVzb
  3MudjEuUmVzb3VyY2VSCXJlc291cmNlcxp0ChJVbnJlc2VydmVSZXNvdXJjZXMSLAoIYWdlbnRfaWQYASACKAsyES5tZXNvcy52M
  S5BZ2VudElEUgdhZ2VudElkEjAKCXJlc291cmNlcxgCIAMoCzISLm1lc29zLnYxLlJlc291cmNlUglyZXNvdXJjZXMaawoNQ3JlY
  XRlVm9sdW1lcxIsCghhZ2VudF9pZBgBIAIoCzIRLm1lc29zLnYxLkFnZW50SURSB2FnZW50SWQSLAoHdm9sdW1lcxgCIAMoCzISL
  m1lc29zLnYxLlJlc291cmNlUgd2b2x1bWVzGmwKDkRlc3Ryb3lWb2x1bWVzEiwKCGFnZW50X2lkGAEgAigLMhEubWVzb3MudjEuQ
  WdlbnRJRFIHYWdlbnRJZBIsCgd2b2x1bWVzGAIgAygLMhIubWVzb3MudjEuUmVzb3VyY2VSB3ZvbHVtZXMaVwoZVXBkYXRlTWFpb
  nRlbmFuY2VTY2hlZHVsZRI6CghzY2hlZHVsZRgBIAIoCzIeLm1lc29zLnYxLm1haW50ZW5hbmNlLlNjaGVkdWxlUghzY2hlZHVsZ
  RpDChBTdGFydE1haW50ZW5hbmNlEi8KCG1hY2hpbmVzGAEgAygLMhMubWVzb3MudjEuTWFjaGluZUlEUghtYWNoaW5lcxpCCg9Td
  G9wTWFpbnRlbmFuY2USLwoIbWFjaGluZXMYASADKAsyEy5tZXNvcy52MS5NYWNoaW5lSURSCG1hY2hpbmVzGk0KCFNldFF1b3RhE
  kEKDXF1b3RhX3JlcXVlc3QYASACKAsyHC5tZXNvcy52MS5xdW90YS5RdW90YVJlcXVlc3RSDHF1b3RhUmVxdWVzdBohCgtSZW1vd
  mVRdW90YRISCgRyb2xlGAEgAigJUgRyb2xlItoECgRUeXBlEgsKB1VOS05PV04QABIOCgpHRVRfSEVBTFRIEAESDQoJR0VUX0ZMQ
  UdTEAISDwoLR0VUX1ZFUlNJT04QAxIPCgtHRVRfTUVUUklDUxAEEhUKEUdFVF9MT0dHSU5HX0xFVkVMEAUSFQoRU0VUX0xPR0dJT
  kdfTEVWRUwQBhIOCgpMSVNUX0ZJTEVTEAcSDQoJUkVBRF9GSUxFEAgSDQoJR0VUX1NUQVRFEAkSDgoKR0VUX0FHRU5UUxAKEhIKD
  kdFVF9GUkFNRVdPUktTEAsSEQoNR0VUX0VYRUNVVE9SUxAMEg0KCUdFVF9UQVNLUxANEg0KCUdFVF9ST0xFUxAOEg8KC0dFVF9XR
  UlHSFRTEA8SEgoOVVBEQVRFX1dFSUdIVFMQEBIOCgpHRVRfTUFTVEVSEBESDQoJU1VCU0NSSUJFEBISFQoRUkVTRVJWRV9SRVNPV
  VJDRVMQExIXChNVTlJFU0VSVkVfUkVTT1VSQ0VTEBQSEgoOQ1JFQVRFX1ZPTFVNRVMQFRITCg9ERVNUUk9ZX1ZPTFVNRVMQFhIaC
  hZHRVRfTUFJTlRFTkFOQ0VfU1RBVFVTEBcSHAoYR0VUX01BSU5URU5BTkNFX1NDSEVEVUxFEBgSHwobVVBEQVRFX01BSU5URU5BT
  kNFX1NDSEVEVUxFEBkSFQoRU1RBUlRfTUFJTlRFTkFOQ0UQGhIUChBTVE9QX01BSU5URU5BTkNFEBsSDQoJR0VUX1FVT1RBEBwSD
  QoJU0VUX1FVT1RBEB0SEAoMUkVNT1ZFX1FVT1RBEB4i3CYKCFJlc3BvbnNlEjIKBHR5cGUYASABKA4yHi5tZXNvcy52MS5tYXN0Z
  XIuUmVzcG9uc2UuVHlwZVIEdHlwZRJCCgpnZXRfaGVhbHRoGAIgASgLMiMubWVzb3MudjEubWFzdGVyLlJlc3BvbnNlLkdldEhlY
  Wx0aFIJZ2V0SGVhbHRoEj8KCWdldF9mbGFncxgDIAEoCzIiLm1lc29zLnYxLm1hc3Rlci5SZXNwb25zZS5HZXRGbGFnc1IIZ2V0R
  mxhZ3MSRQoLZ2V0X3ZlcnNpb24YBCABKAsyJC5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc2UuR2V0VmVyc2lvblIKZ2V0VmVyc2lvb
  hJFCgtnZXRfbWV0cmljcxgFIAEoCzIkLm1lc29zLnYxLm1hc3Rlci5SZXNwb25zZS5HZXRNZXRyaWNzUgpnZXRNZXRyaWNzElUKE
  WdldF9sb2dnaW5nX2xldmVsGAYgASgLMikubWVzb3MudjEubWFzdGVyLlJlc3BvbnNlLkdldExvZ2dpbmdMZXZlbFIPZ2V0TG9nZ
  2luZ0xldmVsEkIKCmxpc3RfZmlsZXMYByABKAsyIy5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc2UuTGlzdEZpbGVzUglsaXN0RmlsZ
  XMSPwoJcmVhZF9maWxlGAggASgLMiIubWVzb3MudjEubWFzdGVyLlJlc3BvbnNlLlJlYWRGaWxlUghyZWFkRmlsZRI/CglnZXRfc
  3RhdGUYCSABKAsyIi5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc2UuR2V0U3RhdGVSCGdldFN0YXRlEkIKCmdldF9hZ2VudHMYCiABK
  AsyIy5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc2UuR2V0QWdlbnRzUglnZXRBZ2VudHMSTgoOZ2V0X2ZyYW1ld29ya3MYCyABKAsyJ
  y5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc2UuR2V0RnJhbWV3b3Jrc1INZ2V0RnJhbWV3b3JrcxJLCg1nZXRfZXhlY3V0b3JzGAwgA
  SgLMiYubWVzb3MudjEubWFzdGVyLlJlc3BvbnNlLkdldEV4ZWN1dG9yc1IMZ2V0RXhlY3V0b3JzEj8KCWdldF90YXNrcxgNIAEoC
  zIiLm1lc29zLnYxLm1hc3Rlci5SZXNwb25zZS5HZXRUYXNrc1IIZ2V0VGFza3MSPwoJZ2V0X3JvbGVzGA4gASgLMiIubWVzb3Mud
  jEubWFzdGVyLlJlc3BvbnNlLkdldFJvbGVzUghnZXRSb2xlcxJFCgtnZXRfd2VpZ2h0cxgPIAEoCzIkLm1lc29zLnYxLm1hc3Rlc
  i5SZXNwb25zZS5HZXRXZWlnaHRzUgpnZXRXZWlnaHRzEkIKCmdldF9tYXN0ZXIYECABKAsyIy5tZXNvcy52MS5tYXN0ZXIuUmVzc
  G9uc2UuR2V0TWFzdGVyUglnZXRNYXN0ZXISZAoWZ2V0X21haW50ZW5hbmNlX3N0YXR1cxgRIAEoCzIuLm1lc29zLnYxLm1hc3Rlc
  i5SZXNwb25zZS5HZXRNYWludGVuYW5jZVN0YXR1c1IUZ2V0TWFpbnRlbmFuY2VTdGF0dXMSagoYZ2V0X21haW50ZW5hbmNlX3Nja
  GVkdWxlGBIgASgLMjAubWVzb3MudjEubWFzdGVyLlJlc3BvbnNlLkdldE1haW50ZW5hbmNlU2NoZWR1bGVSFmdldE1haW50ZW5hb
  mNlU2NoZWR1bGUSPwoJZ2V0X3F1b3RhGBMgASgLMiIubWVzb3MudjEubWFzdGVyLlJlc3BvbnNlLkdldFF1b3RhUghnZXRRdW90Y
  RolCglHZXRIZWFsdGgSGAoHaGVhbHRoeRgBIAIoCFIHaGVhbHRoeRowCghHZXRGbGFncxIkCgVmbGFncxgBIAMoCzIOLm1lc29zL
  nYxLkZsYWdSBWZsYWdzGkYKCkdldFZlcnNpb24SOAoMdmVyc2lvbl9pbmZvGAEgAigLMhUubWVzb3MudjEuVmVyc2lvbkluZm9SC
  3ZlcnNpb25JbmZvGjgKCkdldE1ldHJpY3MSKgoHbWV0cmljcxgBIAMoCzIQLm1lc29zLnYxLk1ldHJpY1IHbWV0cmljcxonCg9HZ
  XRMb2dnaW5nTGV2ZWwSFAoFbGV2ZWwYASACKA1SBWxldmVsGj4KCUxpc3RGaWxlcxIxCgpmaWxlX2luZm9zGAEgAygLMhIubWVzb
  3MudjEuRmlsZUluZm9SCWZpbGVJbmZvcxoyCghSZWFkRmlsZRISCgRzaXplGAEgAigEUgRzaXplEhIKBGRhdGEYAiACKAxSBGRhd
  GEarAIKCEdldFN0YXRlEj8KCWdldF90YXNrcxgBIAEoCzIiLm1lc29zLnYxLm1hc3Rlci5SZXNwb25zZS5HZXRUYXNrc1IIZ2V0V
  GFza3MSSwoNZ2V0X2V4ZWN1dG9ycxgCIAEoCzImLm1lc29zLnYxLm1hc3Rlci5SZXNwb25zZS5HZXRFeGVjdXRvcnNSDGdldEV4Z
  WN1dG9ycxJOCg5nZXRfZnJhbWV3b3JrcxgDIAEoCzInLm1lc29zLnYxLm1hc3Rlci5SZXNwb25zZS5HZXRGcmFtZXdvcmtzUg1nZ
  XRGcmFtZXdvcmtzEkIKCmdldF9hZ2VudHMYBCABKAsyIy5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc2UuR2V0QWdlbnRzUglnZXRBZ
  2VudHMalQUKCUdldEFnZW50cxJBCgZhZ2VudHMYASADKAsyKS5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc2UuR2V0QWdlbnRzLkFnZ
  W50UgZhZ2VudHMSPgoQcmVjb3ZlcmVkX2FnZW50cxgCIAMoCzITLm1lc29zLnYxLkFnZW50SW5mb1IPcmVjb3ZlcmVkQWdlbnRzG
  oQECgVBZ2VudBIyCgphZ2VudF9pbmZvGAEgAigLMhMubWVzb3MudjEuQWdlbnRJbmZvUglhZ2VudEluZm8SFgoGYWN0aXZlGAIgA
  igIUgZhY3RpdmUSGAoHdmVyc2lvbhgDIAIoCVIHdmVyc2lvbhIQCgNwaWQYBCABKAlSA3BpZBI7Cg9yZWdpc3RlcmVkX3RpbWUYB
  SABKAsyEi5tZXNvcy52MS5UaW1lSW5mb1IOcmVnaXN0ZXJlZFRpbWUSPwoRcmVyZWdpc3RlcmVkX3RpbWUYBiABKAsyEi5tZXNvc
  y52MS5UaW1lSW5mb1IQcmVyZWdpc3RlcmVkVGltZRI7Cg90b3RhbF9yZXNvdXJjZXMYByADKAsyEi5tZXNvcy52MS5SZXNvdXJjZ
  VIOdG90YWxSZXNvdXJjZXMSQwoTYWxsb2NhdGVkX3Jlc291cmNlcxgIIAMoCzISLm1lc29zLnYxLlJlc291cmNlUhJhbGxvY2F0Z
  WRSZXNvdXJjZXMSPwoRb2ZmZXJlZF9yZXNvdXJjZXMYCSADKAsyEi5tZXNvcy52MS5SZXNvdXJjZVIQb2ZmZXJlZFJlc291cmNlc
  xJCCgxjYXBhYmlsaXRpZXMYCiADKAsyHi5tZXNvcy52MS5BZ2VudEluZm8uQ2FwYWJpbGl0eVIMY2FwYWJpbGl0aWVzGuMGCg1HZ
  XRGcmFtZXdvcmtzElEKCmZyYW1ld29ya3MYASADKAsyMS5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc2UuR2V0RnJhbWV3b3Jrcy5Gc
  mFtZXdvcmtSCmZyYW1ld29ya3MSZAoUY29tcGxldGVkX2ZyYW1ld29ya3MYAiADKAsyMS5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc
  2UuR2V0RnJhbWV3b3Jrcy5GcmFtZXdvcmtSE2NvbXBsZXRlZEZyYW1ld29ya3MSSgoUcmVjb3ZlcmVkX2ZyYW1ld29ya3MYAyADK
  AsyFy5tZXNvcy52MS5GcmFtZXdvcmtJbmZvUhNyZWNvdmVyZWRGcmFtZXdvcmtzGswECglGcmFtZXdvcmsSPgoOZnJhbWV3b3JrX
  2luZm8YASACKAsyFy5tZXNvcy52MS5GcmFtZXdvcmtJbmZvUg1mcmFtZXdvcmtJbmZvEhYKBmFjdGl2ZRgCIAIoCFIGYWN0aXZlE
  hwKCWNvbm5lY3RlZBgDIAIoCFIJY29ubmVjdGVkEhwKCXJlY292ZXJlZBgLIAIoCFIJcmVjb3ZlcmVkEjsKD3JlZ2lzdGVyZWRfd
  GltZRgEIAEoCzISLm1lc29zLnYxLlRpbWVJbmZvUg5yZWdpc3RlcmVkVGltZRI/ChFyZXJlZ2lzdGVyZWRfdGltZRgFIAEoCzISL
  m1lc29zLnYxLlRpbWVJbmZvUhByZXJlZ2lzdGVyZWRUaW1lEj8KEXVucmVnaXN0ZXJlZF90aW1lGAYgASgLMhIubWVzb3MudjEuV
  GltZUluZm9SEHVucmVnaXN0ZXJlZFRpbWUSJwoGb2ZmZXJzGAcgAygLMg8ubWVzb3MudjEuT2ZmZXJSBm9mZmVycxI9Cg5pbnZlc
  nNlX29mZmVycxgIIAMoCzIWLm1lc29zLnYxLkludmVyc2VPZmZlclINaW52ZXJzZU9mZmVycxJDChNhbGxvY2F0ZWRfcmVzb3VyY
  2VzGAkgAygLMhIubWVzb3MudjEuUmVzb3VyY2VSEmFsbG9jYXRlZFJlc291cmNlcxI/ChFvZmZlcmVkX3Jlc291cmNlcxgKIAMoC
  zISLm1lc29zLnYxLlJlc291cmNlUhBvZmZlcmVkUmVzb3VyY2VzGrACCgxHZXRFeGVjdXRvcnMSTQoJZXhlY3V0b3JzGAEgAygLM
  i8ubWVzb3MudjEubWFzdGVyLlJlc3BvbnNlLkdldEV4ZWN1dG9ycy5FeGVjdXRvclIJZXhlY3V0b3JzEloKEG9ycGhhbl9leGVjd
  XRvcnMYAiADKAsyLy5tZXNvcy52MS5tYXN0ZXIuUmVzcG9uc2UuR2V0RXhlY3V0b3JzLkV4ZWN1dG9yUg9vcnBoYW5FeGVjdXRvc
  nMadQoIRXhlY3V0b3ISOwoNZXhlY3V0b3JfaW5mbxgBIAIoCzIWLm1lc29zLnYxLkV4ZWN1dG9ySW5mb1IMZXhlY3V0b3JJbmZvE
  iwKCGFnZW50X2lkGAIgAigLMhEubWVzb3MudjEuQWdlbnRJRFIHYWdlbnRJZBqOAgoIR2V0VGFza3MSMwoNcGVuZGluZ190YXNrc
  xgBIAMoCzIOLm1lc29zLnYxLlRhc2tSDHBlbmRpbmdUYXNrcxIkCgV0YXNrcxgCIAMoCzIOLm1lc29zLnYxLlRhc2tSBXRhc2tzE
  jsKEXVucmVhY2hhYmxlX3Rhc2tzGAUgAygLMg4ubWVzb3MudjEuVGFza1IQdW5yZWFjaGFibGVUYXNrcxI3Cg9jb21wbGV0ZWRfd
  GFza3MYAyADKAsyDi5tZXNvcy52MS5UYXNrUg5jb21wbGV0ZWRUYXNrcxIxCgxvcnBoYW5fdGFza3MYBCADKAsyDi5tZXNvcy52M
  S5UYXNrUgtvcnBoYW5UYXNrcxowCghHZXRSb2xlcxIkCgVyb2xlcxgBIAMoCzIOLm1lc29zLnYxLlJvbGVSBXJvbGVzGkUKCkdld
  FdlaWdodHMSNwoMd2VpZ2h0X2luZm9zGAEgAygLMhQubWVzb3MudjEuV2VpZ2h0SW5mb1ILd2VpZ2h0SW5mb3MaQgoJR2V0TWFzd
  GVyEjUKC21hc3Rlcl9pbmZvGAEgASgLMhQubWVzb3MudjEuTWFzdGVySW5mb1IKbWFzdGVySW5mbxpTChRHZXRNYWludGVuYW5jZ
  VN0YXR1cxI7CgZzdGF0dXMYASACKAsyIy5tZXNvcy52MS5tYWludGVuYW5jZS5DbHVzdGVyU3RhdHVzUgZzdGF0dXMaVAoWR2V0T
  WFpbnRlbmFuY2VTY2hlZHVsZRI6CghzY2hlZHVsZRgBIAIoCzIeLm1lc29zLnYxLm1haW50ZW5hbmNlLlNjaGVkdWxlUghzY2hlZ
  HVsZRo/CghHZXRRdW90YRIzCgZzdGF0dXMYASACKAsyGy5tZXNvcy52MS5xdW90YS5RdW90YVN0YXR1c1IGc3RhdHVzItgCCgRUe
  XBlEgsKB1VOS05PV04QABIOCgpHRVRfSEVBTFRIEAESDQoJR0VUX0ZMQUdTEAISDwoLR0VUX1ZFUlNJT04QAxIPCgtHRVRfTUVUU
  klDUxAEEhUKEUdFVF9MT0dHSU5HX0xFVkVMEAUSDgoKTElTVF9GSUxFUxAGEg0KCVJFQURfRklMRRAHEg0KCUdFVF9TVEFURRAIE
  g4KCkdFVF9BR0VOVFMQCRISCg5HRVRfRlJBTUVXT1JLUxAKEhEKDUdFVF9FWEVDVVRPUlMQCxINCglHRVRfVEFTS1MQDBINCglHR
  VRfUk9MRVMQDRIPCgtHRVRfV0VJR0hUUxAOEg4KCkdFVF9NQVNURVIQDxIaChZHRVRfTUFJTlRFTkFOQ0VfU1RBVFVTEBASHAoYR
  0VUX01BSU5URU5BTkNFX1NDSEVEVUxFEBESDQoJR0VUX1FVT1RBEBIirAcKBUV2ZW50Ei8KBHR5cGUYASABKA4yGy5tZXNvcy52M
  S5tYXN0ZXIuRXZlbnQuVHlwZVIEdHlwZRJBCgpzdWJzY3JpYmVkGAIgASgLMiEubWVzb3MudjEubWFzdGVyLkV2ZW50LlN1YnNjc
  mliZWRSCnN1YnNjcmliZWQSPwoKdGFza19hZGRlZBgDIAEoCzIgLm1lc29zLnYxLm1hc3Rlci5FdmVudC5UYXNrQWRkZWRSCXRhc
  2tBZGRlZBJFCgx0YXNrX3VwZGF0ZWQYBCABKAsyIi5tZXNvcy52MS5tYXN0ZXIuRXZlbnQuVGFza1VwZGF0ZWRSC3Rhc2tVcGRhd
  GVkEkIKC2FnZW50X2FkZGVkGAUgASgLMiEubWVzb3MudjEubWFzdGVyLkV2ZW50LkFnZW50QWRkZWRSCmFnZW50QWRkZWQSSAoNY
  WdlbnRfcmVtb3ZlZBgGIAEoCzIjLm1lc29zLnYxLm1hc3Rlci5FdmVudC5BZ2VudFJlbW92ZWRSDGFnZW50UmVtb3ZlZBpNCgpTd
  WJzY3JpYmVkEj8KCWdldF9zdGF0ZRgBIAEoCzIiLm1lc29zLnYxLm1hc3Rlci5SZXNwb25zZS5HZXRTdGF0ZVIIZ2V0U3RhdGUaL
  woJVGFza0FkZGVkEiIKBHRhc2sYASACKAsyDi5tZXNvcy52MS5UYXNrUgR0YXNrGqABCgtUYXNrVXBkYXRlZBI4CgxmcmFtZXdvc
  mtfaWQYASACKAsyFS5tZXNvcy52MS5GcmFtZXdvcmtJRFILZnJhbWV3b3JrSWQSLAoGc3RhdHVzGAIgAigLMhQubWVzb3MudjEuV
  GFza1N0YXR1c1IGc3RhdHVzEikKBXN0YXRlGAMgAigOMhMubWVzb3MudjEuVGFza1N0YXRlUgVzdGF0ZRpNCgpBZ2VudEFkZGVkE
  j8KBWFnZW50GAEgAigLMikubWVzb3MudjEubWFzdGVyLlJlc3BvbnNlLkdldEFnZW50cy5BZ2VudFIFYWdlbnQaPAoMQWdlbnRSZ
  W1vdmVkEiwKCGFnZW50X2lkGAEgAigLMhEubWVzb3MudjEuQWdlbnRJRFIHYWdlbnRJZCJpCgRUeXBlEgsKB1VOS05PV04QABIOC
  gpTVUJTQ1JJQkVEEAESDgoKVEFTS19BRERFRBACEhAKDFRBU0tfVVBEQVRFRBADEg8KC0FHRU5UX0FEREVEEAQSEQoNQUdFTlRfU
  kVNT1ZFRBAFQiQKGm9yZy5hcGFjaGUubWVzb3MudjEubWFzdGVyQgZQcm90b3M="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, Seq(
      org.apache.mesos.v1.mesos.MesosProto.scalaDescriptor,
      MaintenanceProto.scalaDescriptor,
      QuotaProto.scalaDescriptor
    ))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val proto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(proto, Array(
    org.apache.mesos.v1.mesos.MesosProto.javaDescriptor,
    maintenance.MaintenanceProto.javaDescriptor,
    quota.QuotaProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}